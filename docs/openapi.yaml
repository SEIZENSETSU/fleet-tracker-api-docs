swagger: '2.0'
info:
  version: '1.0.0'
  title: 'Fleet Tracker API'
  description: 'このAPIはFleet TrackerのためのAPIです。'
tags:
  - name: warehouse
    description: 倉庫情報API
  - name: delay
    description: 遅延情報API
  - name: comment
    description: コメントAPI
  - name: user
    description: ユーザーAPI
  - name: hello
    description: Hello API
host: 'fleet-tracker-api-docs-tnvlhcq2ja-uc.a.run.app'
schemes:
  - https
paths:
  /warehouses:
    get:
      tags:
        - warehouse
      summary: 倉庫一覧情報取得API
      description: '倉庫の一覧情報を取得します'
      produces:
        - application/json
      parameters:
        - name: warehouse_area_id
          in: query
          description: 倉庫エリアID
          required: false
          type: integer
      responses:
        '200':
          description: 取得成功
          schema:
            type: array
            items:
              $ref: '#/definitions/Warehouse'
        404:
          description: 該当する倉庫エリアが存在しません
        500:
          description: サーバーエラー
  /warehouses/search:
    get:
      tags:
        - warehouse
      summary: 倉庫検索API
      description: '倉庫名から倉庫情報を取得するAPIです。倉庫エリア内にいる場合は、該当エリア内の倉庫情報を近い順でソートして返し、倉庫エリア外にいる場合は近場の倉庫エリア情報を返します。お気に入り登録した倉庫IDを指定することで、倉庫エリア内外問わず、倉庫情報を取得できます。'
      produces:
        - application/json
      parameters:
        - name: favorite_warehouse_ids
          in: query
          description: お気に入りの倉庫ID
          required: false
          type: integer
          items:
            type: number
        - name: user_latitude
          in: query
          description: ユーザーの緯度
          required: true
          type: number
          format: double
        - name: user_longitude
          in: query
          description: ユーザーの経度
          required: true
          type: number
          format: double
      responses:
        '200':
          description: 取得成功(例として倉庫エリアと倉庫情報を同時に返していますが本来はどちらかか片方が返されます。)
          schema:
            type: object
            $ref: '#/definitions/SearchWarehousesResult'
          examples:
            example1:
              is_invading: true
              warehouses:
                - warehouse_id: 1
                  warehouse_name: ハルフーズ東京工場
                  delay_state: normal
                  distance: 10
                - warehouse_id: 2
                  warehouse_name: ハルフーズ東京工場2
                  delay_state: normal
                  distance: 20
              favorite_warehouses:
                - warehouse_id: 5
                  warehouse_name: ハルフーズ大阪工場
                  delay_state: normal
                  distance: 10
              warehouse_areas: []
            example2:
              is_invading: true
              warehouses: []
              favorite_warehouses: []
              warehouse_areas:
                - warehouse_area_id: 1
                  warehouse_area_name: 東京
                  delay_state: normal
                  distance: 10
            example3:
              is_invading: false
              warehouses: []
              favorite_warehouses:
                - warehouse_id: 5
                  warehouse_name: ハルフーズ大阪工場
                  delay_state: normal
                  distance: 10
              warehouse_areas:
                - warehouse_area_id: 1
                  warehouse_area_name: 東京
                  delay_state: normal
                  distance: 10
        404:
          description: 該当する倉庫が存在しません
        500:
          description: サーバーエラー
  /areas/warehouses:
    get:
      tags:
        - warehouse
      summary: ローカルエリアごとの倉庫情報一括取得API
      description: 'ローカルエリアおよび倉庫エリアでグループ化された倉庫の一覧情報を取得します'
      produces:
        - application/json
      parameters: [ ]
      responses:
        '200':
          description: 取得成功
          schema:
            type: array
            items:
              $ref: '#/definitions/LocalAreaResponse'
        500:
          description: サーバーエラー
  /warehouse:
    get:
      tags:
        - warehouse
      summary: 倉庫情報取得API
      description: '倉庫エリアIDまたは倉庫IDから、倉庫情報を取得するAPIです'
      produces:
        - application/json
      parameters:
        - name: warehouse_id
          in: query
          description: 倉庫ID
          required: true
          type: integer
      responses:
        '200':
          description: 取得成功
          schema:
            type: object
            $ref: '#/definitions/Warehouse'
        404:
          description: 該当する倉庫が存在しません
        500:
          description: サーバーエラー
  /comments:
    get:
      tags:
        - comment
      summary: コメント取得API
      description: "倉庫IDからコメントを一括取得するAPIです"
      produces:
        - application/json
      parameters:
        - name: warehouse_id
          in: query
          description: 倉庫ID
          required: true
          type: integer
      responses:
        200:
          description: 取得成功
          schema:
            type: array
            items:
              $ref: "#/definitions/Comment"
        404:
          description: 該当するコメントが存在しません
        500:
          description: サーバーエラー
  /comment:
    post:
      tags:
        - comment
      summary: コメント登録API
      description: "倉庫IDにコメントを登録するAPIです"
      produces:
        - application/json
      parameters:
        - in: body
          name: comment
          description: コメント情報
          required: true
          schema:
            $ref: "#/definitions/CommentRequest"
      responses:
        201:
          description: 登録成功
          schema:
            type: object
            $ref: "#/definitions/CommentRequest"
        404:
          description: 該当するコメントが存在しません
        500:
          description: サーバーエラー
    delete:
      tags:
        - comment
      summary: コメント削除API
      description: "倉庫IDとコメントIDからコメントを削除するAPIです"
      produces:
        - application/json
      parameters:
        - name: comment_id
          in: query
          description: コメントID
          required: true
          type: integer
      responses:
        204:
          description: 削除成功
        404:
          description: 該当するコメントが存在しません
        500:
          description: サーバーエラー
  /user:
    get:
      tags:
        - user
      summary: ユーザー情報取得API
      description: "ユーザーIDからユーザー情報を取得するAPIです"
      produces:
        - application/json
      parameters:
        - name: uid
          in: query
          description: ユーザーID
          required: true
          type: string
      responses:
        200:
          description: 取得成功
          schema:
            type: object
            $ref: "#/definitions/UserResponse"
        404:
          description: ユーザーが存在しません
        500:
          description: サーバーエラー
    post:
      tags:
        - user
      summary: ユーザー登録API
      description: "ユーザーを登録するAPIです"
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: ユーザー情報
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: 登録成功
          schema:
            type: object
            $ref: "#/definitions/User"
        400:
          description: パラメータエラー
          schema:
            type: object
            properties:
              error:
                type: string
                example: パラメータエラー
        500:
          description: サーバーエラー
    put:
      tags:
        - user
      summary: ユーザー更新API
      description: "ユーザーを更新するAPIです"
      produces:
        - application/json
      parameters:
        - in: query
          name: uid
          description: ユーザーID
          required: true
          type: string
        - in: body
          name: user
          description: ユーザー情報
          required: true
          schema:
            type: object
            $ref: "#/definitions/UserRequest"
      responses:
        200:
          description: 更新成功
          schema:
            type: object
            $ref: "#/definitions/User"
        404:
          description: ユーザーが存在しません
        500:
          description: サーバーエラー
    delete:
      tags:
        - user
      summary: ユーザー削除API
      description: "ユーザーを削除するAPIです"
      produces:
        - application/json
      parameters:
        - name: uid
          in: query
          description: ユーザーID
          required: true
          type: string
      responses:
        204:
          description: 削除成功
        404:
          description: ユーザーが存在しません
        500:
          description: サーバーエラー
  /delay:
    get:
      tags:
        - delay
      summary: 遅延情報取得API
      description: "倉庫IDから遅延情報を取得するAPIです"
      produces:
        - application/json
      parameters:
        - name: warehouse_area_id
          in: query
          description: 倉庫エリアID
          required: true
          type: integer
      responses:
        200:
          description: 取得成功
          schema:
            type: array
            items:
              $ref: "#/definitions/DelayInformation"
        404:
          description: 該当する遅延情報が存在しません
        500:
          description: サーバーエラー
    post:
      tags:
        - delay
      summary: 遅延情報登録API
      description: "倉庫IDに遅延情報を登録するAPIです。 delay_stateにはnormal, pause, halfHour, anHour, impossibleのいずれかを指定してください。"
      produces:
        - application/json
      parameters:
        - in: body
          name: delay
          description: 遅延情報
          required: true
          schema:
            $ref: "#/definitions/DelayInformationRequest"
      responses:
        201:
          description: 登録成功
          schema:
            type: object
            $ref: "#/definitions/DelayInformationRequest"
        400:
          description: パラメータエラー
          schema:
            type: object
            properties:
              error:
                type: string
                example: パラメータエラー
        500:
          description: サーバーエラー
  /hello:
    get:
      tags:
        - hello
      summary: Hello API
      description: 'Hello API'
      produces:
        - application/json
      responses:
        '200':
          description: 取得成功
          schema:
            type: string
            example: 'Hello, World!'
definitions:
  LocalAreaResponse:
    type: object
    properties:
      local_area_id:
        type: integer
        example: 1
      local_area_name:
        type: string
        example: 関東
      warehouse_areas:
        type: array
        items:
          type: object
          properties:
            warehouse_area_id:
              type: integer
              example: 1
            warehouse_area_name:
              type: string
              example: 東京
            warehouse_area_latitude:
              type: number
              format: double
              example: 35.689
            warehouse_area_longitude:
              type: number
              format: double
              example: 139.692
            warehouses:
              type: array
              items:
                type: object
                properties:
                  warehouse_id:
                    type: integer
                    example: 1
                  warehouse_name:
                    type: string
                    example: ハルフーズ東京工場
                  warehouse_latitude:
                    type: number
                    format: double
                    example: 35.689
                  warehouse_longitude:
                    type: number
                    format: double
                    example: 139.692
  Warehouse:
    type: object
    properties:
      warehouse_id:
        type: integer
        example: 1
      warehouse_area_id:
        type: integer
        example: 11
      warehouse_name:
        type: string
        example: ハルフーズ東京工場
      warehouse_latitude:
        type: number
        format: double
        example: 35.689
      warehouse_longitude:
        type: number
        format: double
        example: 139.692
  SearchWarehousesResult:
    type: object
    properties:
      is_invading:
        type: boolean
        example: false
        description: 倉庫エリアに侵入しているかどうか
      warehouses:
        type: array
        description: ユーザーが倉庫エリア内にいる場合は、倉庫情報を返す。
        items:
          type: object
          properties:
            warehouse_id:
              type: integer
              example: 1
            warehouse_name:
              type: string
              example: ハルフーズ東京工場
            delay_state:
              type: string
              example: normal
              description: normal, pause, halfHour, anHour, impossibleのいずれか
            distance:
              type: number
              format: double
              example: 10
              description: ユーザーとの距離(km)
      favorite_warehouses:
        type: array
        description: お気に入りを指定した場合は、該当する倉庫情報を返す。
        items:
          type: object
          properties:
            warehouse_id:
              type: integer
              example: 1
            warehouse_name:
              type: string
              example: ハルフーズ東京工場
            delay_state:
              type: string
              example: normal
              description: normal, pause, halfHour, anHour, impossibleのいずれか
            distance:
              type: number
              format: double
              example: 10
              description: ユーザーとの距離(km)
      warehouse_areas:
        type: array
        description: ユーザーが倉庫エリア外にいる場合は、倉庫エリア情報を返す。
        items:
          type: object
          properties:
            warehouse_area_id:
              type: integer
              example: 1
            warehouse_area_name:
              type: string
              example: 東京
            delay_state:
              type: string
              example: normal
              description: normal, pause, halfHour, anHour, impossibleのいずれか
            distance:
              type: number
              format: double
              example: 10
              description: ユーザーとの距離(km)
  Comment:
    type: object
    properties:
      comment_id:
        type: integer
        example: 1
      uid:
        type: string
        example: user1
      warehouse_id:
        type: integer
        example: 1
      contents:
        type: string
        example: テストコメント
      created_at:
        type: string
        example: 2022-07-02 00:00:00
  CommentRequest:
    type: object
    properties:
      uid:
        type: string
        example: user1
      warehouse_id:
        type: integer
        example: 1
      contents:
        type: string
        example: テストコメント
  User:
    type: object
    properties:
      uid:
        type: string
        example: 'user1'
      user_name:
        type: string
        example: 'ユーザー1'
      fcm_token_id:
        type: string
        example: 'fcm_token_id'
  UserRequest:
    type: object
    properties:
      user_name:
        type: string
        example: 'ユーザー1'
      fcm_token_id:
        type: string
        example: 'fcm_token_id'
  UserResponse:
    type: object
    properties:
      uid:
        type: string
        example: 'user1'
      user_name:
        type: string
        example: 'ユーザー1'
  DelayInformation:
    type: "object"
    properties:
      delay_information_id:
        type: "integer"
        example: 1
      warehouse_id:
        type: "integer"
        example: 1
      warehouse_name:
        type: string
        example: ハルフーズ東京工場
      delay_time_detail:
        type: array
        items:
          type: object
          properties:
            delay_state:
              type: string
              example: normal
              description: normal, pause, halfHour, anHour, impossibleのいずれか
            answer_count:
              type: "integer"
              example: 3
      created_at:
        type: "string"
        example: "2022-07-02 00:00:00"
        format: "date-time"
      updated_at:
        type: "string"
        example: "2022-07-02 00:00:00"
        format: "date-time"
  DelayInformationRequest:
    type: "object"
    required:
      - "warehouse_id"
      - "uid"
      - "delay_state"
    properties:
      warehouse_id:
        type: "integer"
        example: 1
      delay_state:
        type: string
        example: normal
        description: normal, pause, halfHour, anHour, impossibleのいずれか

externalDocs:
  description: 'Find out more about Swagger'
  url: 'http://swagger.io'
